<h2>Why Javascript</h2>


<div class="lead">Is JavaScript Freely Available?</div>
<p>
    JavaScript is arguably the most open programming language there is: ECMA-262,
    its specification, is an ISO standard. That specification is closely followed by many
    implementations from independent parties. Some of those implementations are open
    source. Furthermore, the evolution of the language is handled by TC39, a committee
    comprising several companies, including all major browser vendors. Many of those
    companies are normally competitors, but they work together for the benefit of the language.
</p>

<div class="lead">Is JavaScript Elegant?</div>
<p>
    Yes and no. I’ve written fair amounts of code in several programming languages
    from different paradigms. Therefore, I’m well aware that JavaScript isn’t the pinnacle
    of elegance. However, it is a very flexible language, has a reasonably elegant core,
    and enables you to use a mixture of object-oriented programming and functional
    programming.
</p>
<p>
    Language compatibility between JavaScript engines used to be a problem, but isn’t
    anymore, partly thanks to the test262 suite that checks engines for conformance to
    the ECMAScript specification. In contrast, browser and DOM differences are still a
    challenge. That’s why it is normally best to rely on frameworks for hiding those differences.
</p>

<div class="lead">Does JavaScript Have a Future?</div>
<div>Several things indicate that JavaScript has a bright future:</div>
<p>
    The most beautiful programming language in the world is useless unless it allows
    you to write the program that you need.
</p>
<p>
    There is much JavaScript-related innovation (e.g., the aforementioned asm.js and ParallelJS, Microsoft’s TypeScript, etc.).
</p>
<p>
    The web platform of which JavaScript is an integral part is maturing rapidly.
</p>
<p>
    JavaScript is supported by a broad coalition of companies—no single person or company controls it.
</p>

@section CurrentPage{
    <strong>Learn -> Javascript -> WhyJavascript</strong>
}